[{"/Users/jpcarey/turing/3module/projects/rancid-tomatillos/src/index.js":"1","/Users/jpcarey/turing/3module/projects/rancid-tomatillos/src/App/App.js":"2","/Users/jpcarey/turing/3module/projects/rancid-tomatillos/src/apiCalls.js":"3","/Users/jpcarey/turing/3module/projects/rancid-tomatillos/src/MovieView/MovieView.js":"4","/Users/jpcarey/turing/3module/projects/rancid-tomatillos/src/SearchBar/SearchBar.js":"5","/Users/jpcarey/turing/3module/projects/rancid-tomatillos/src/Error/Error.js":"6","/Users/jpcarey/turing/3module/projects/rancid-tomatillos/src/NavBar/NavBar.js":"7","/Users/jpcarey/turing/3module/projects/rancid-tomatillos/src/Movies/Movies.js":"8","/Users/jpcarey/turing/3module/projects/rancid-tomatillos/src/Card/Card.js":"9"},{"size":278,"mtime":1607632721743,"results":"10","hashOfConfig":"11"},{"size":2098,"mtime":1607718986578,"results":"12","hashOfConfig":"11"},{"size":553,"mtime":1607632721736,"results":"13","hashOfConfig":"11"},{"size":2551,"mtime":1607632721732,"results":"14","hashOfConfig":"11"},{"size":1036,"mtime":1607722990230,"results":"15","hashOfConfig":"11"},{"size":186,"mtime":1607632721730,"results":"16","hashOfConfig":"11"},{"size":983,"mtime":1607719868014,"results":"17","hashOfConfig":"11"},{"size":938,"mtime":1607718986581,"results":"18","hashOfConfig":"11"},{"size":924,"mtime":1607718388336,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1c5owdx",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},"/Users/jpcarey/turing/3module/projects/rancid-tomatillos/src/index.js",[],["41","42"],"/Users/jpcarey/turing/3module/projects/rancid-tomatillos/src/App/App.js",[],"/Users/jpcarey/turing/3module/projects/rancid-tomatillos/src/apiCalls.js",[],"/Users/jpcarey/turing/3module/projects/rancid-tomatillos/src/MovieView/MovieView.js",[],"/Users/jpcarey/turing/3module/projects/rancid-tomatillos/src/SearchBar/SearchBar.js",["43"],"import React, { Component } from 'react';\nimport './SearchBar.scss'\nimport searchBtn from '../images/search-icon.svg'\n\n\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      searchTerm: ''\n    }\n  }\n\n  updateInput = (e) => {\n    this.setState({\n      searchTerm: e.target.value\n    })\n  }\n\n  enterSearchTerm = (e) => {\n    e.preventDefault()\n    this.props.searchMovies(this.state.searchTerm)\n  }\n\n  render () {\n    return (\n      <form>\n        <h2>Search Movies by Title</h2>\n        <div className=\"search\">\n          <input \n            placeholder='ex. Dead Pool'\n            name='searchTerm'\n            type='text'\n            onChange={ this.updateInput }\n            value= { this.state.searchTerm }>\n          </input>\n          <img\n          className=\"searchImg\"\n          alt=\"search image\"\n          src={ searchBtn }\n          role=\"button\"\n          onClick= { this.enterSearchTerm }\n          />\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default SearchBar;\n\n    ","/Users/jpcarey/turing/3module/projects/rancid-tomatillos/src/Error/Error.js",[],"/Users/jpcarey/turing/3module/projects/rancid-tomatillos/src/NavBar/NavBar.js",[],"/Users/jpcarey/turing/3module/projects/rancid-tomatillos/src/Movies/Movies.js",[],"/Users/jpcarey/turing/3module/projects/rancid-tomatillos/src/Card/Card.js",["44","45"],"import React, {Component} from 'react'\nimport './Card.scss'\nimport '../App/App.js'\nimport {Link} from 'react-router-dom';\nimport tomsBack from '../images/toms-back.png'\n\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { id, image, title, average_rating } = this.props\n    return (\n    <Link \n    to={`/movie-review/${id}`}\n    className=\"movie-card\">\n      <section \n        role=\"button\"\n        data-testid={id}\n        >\n        <img\n          className=\"movie-img\"\n          src={image} \n          alt={title + \" movie cover\"}\n        />\n        <article>\n          <h2>{title}</h2>\n            <div className=\"tomato-rating\">\n              <p>{Math.round(average_rating * 10)}%</p>\n              <img src={tomsBack} className=\"toms-back\" height=\"70px\" width=\"70px\"/>\n            </div>\n        </article>\n      </section>\n    </Link>\n    )\n  }\n}\n\nexport default Card;",{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":38,"column":11,"nodeType":"52","endLine":44,"endColumn":13},{"ruleId":"53","severity":1,"message":"54","line":8,"column":3,"nodeType":"55","messageId":"56","endLine":10,"endColumn":4},{"ruleId":"57","severity":1,"message":"58","line":31,"column":15,"nodeType":"52","endLine":31,"endColumn":85},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]